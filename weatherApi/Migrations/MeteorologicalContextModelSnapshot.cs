// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using weatherApi.Data;

#nullable disable

namespace weatherApi.Migrations
{
    [DbContext(typeof(MeteorologicalContext))]
    partial class MeteorologicalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("weatherApi.Models.MeteorologicalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Humidity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Max_temperature")
                        .HasColumnType("real");

                    b.Property<float>("Min_temperature")
                        .HasColumnType("real");

                    b.Property<float>("Precipitation")
                        .HasColumnType("real");

                    b.Property<string>("Weather_day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Weather_night")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Wind_speed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Weathers");
                });
#pragma warning restore 612, 618
        }
    }
}
